name: CI/CD Pipeline for Node.js app with KIND

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Set up Docker BuildKit
      run: |
        docker buildx create --name mybuilder --use

    - name: Build Docker image
      run: |
        docker buildx build -t my-node-app:$GITHUB_SHA --push .

    # Docker Hub (commented out, keep it if needed)
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Push Docker image to Docker Hub
    #   run: |
    #     docker tag my-node-app:$GITHUB_SHA mydockerusername/my-node-app:$GITHUB_SHA
    #     docker push mydockerusername/my-node-app:$GITHUB_SHA

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image to GitHub Container Registry
      run: |
        docker tag my-node-app:$GITHUB_SHA ghcr.io/myusername/my-node-app:$GITHUB_SHA
        docker push ghcr.io/myusername/my-node-app:$GITHUB_SHA

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Set up KIND (Kubernetes in Docker)
      run: |
        curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.17.0/kind-linux-amd64
        chmod +x kind
        mv kind /usr/local/bin/

    - name: Create Kubernetes Cluster using KIND
      run: |
        kind create cluster --config kind-config.yaml

    - name: Set kubeconfig for KIND
      run: |
        export KUBECONFIG=$(kind get kubeconfig --name kind)
        echo "KUBECONFIG=$KUBECONFIG"

    - name: Deploy to KIND Cluster
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl rollout status deployment/my-node-app

  clean:
    runs-on: ubuntu-latest
    steps:
    - name: Clean up KIND cluster
      run: |
        kind delete cluster

